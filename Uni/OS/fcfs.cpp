#include<iostream>#include<vector>classProcess{public:intprogTitle;intprocessArrivalTime;intburstTime;Process(){processArrivalTime=0;burstTime=0;}Process(inttitle,intat,intbt):progTitle(title),processArrivalTime(at),burstTime(bt){}};voidbubbleSort(std::vector<Process*>processQueue){intn=processQueue.size();for(inti=0;i<n-1;i++){for(intj=0;j<n-i-1;j++)
{if(processQueue[j]->processArrivalTime<processQueue[j+1]->processArrivalTime){Process*t=processQueue[j];processQueue[j]=processQueue[j+1];processQueue[j+1]=t;std::cout<<"Swapped"<<i<<"with"<<j<<std::endl<<n<<std::endl;}}}}intmain(){intnum;std::cout<<"Enternumberofprocessestospawn:"<<std::endl;std::cin>>num;std::vector<Process*>procQueue;for(inti=0;i<num;i++){intart;intbrst;std::cout<<"EnterArrivaltimeofProcess"<<i+1<<":"<<std::endl;std::cin>>art;std::cout<<"EnterBursttimeofProcess"<<i+1<<":"<<std::endl;std::cin>>brst;Process*proc=newProcess(i+1,art,brst);procQueue.push_back(proc);std::cout<<art<<"\t"<<brst<<std::endl;}//FCFSintcurrCPUtime=0;bubbleSort(procQueue);std::vector<int>wait_times;doubleavg_wait_time=0;for(inti=0;i<procQueue.size();i++){Processt=*procQueue[i];if(i==0){currCPUtime=t.processArrivalTime;avg_wait_time=0;currCPUtime+=t.burstTime;wait_times.push_back(0);
std::cout<<"Process"<<t.progTitle<<"completed"<<std::endl;}else{if(currCPUtime<t.processArrivalTime){currCPUtime=t.processArrivalTime;wait_times.push_back(0);}else{avg_wait_time+=(currCPUtime-t.processArrivalTime);wait_times.push_back(currCPUtime-t.processArrivalTime);}currCPUtime+=t.burstTime;std::cout<<"Process"<<t.progTitle<<"completed"<<std::endl;}}//for(inti=0;i<procQueue.size();i++)//{//std::cout<<procQueue[i]->processArrivalTime<<"\t"<<procQueue[i]->progTitle<<std::endl;//}avg_wait_time=avg_wait_time/procQueue.size();std::cout<<"AverageProcessWaitingTime="<<avg_wait_time<<std::endl;